{
  "Zeller's Congruence Calculator | Find Day of the Week for Any Date": "蔡勒一致性计算器 | 查找任何日期的星期",
  "📅 Zeller's Congruence Day of the Week Calculator": "📅 蔡勒一致性星期计算器",
  "Discover the exact day of the week for any date. Our tool uses Zeller's Congruence for precise calculations, including the complex Gregorian calendar transition of 1582.": "发现任何日期的确切星期。我们的工具使用蔡勒一致性进行精确计算，包括1582年复杂的公历过渡。",
  "Find Day": "查找日期",
  "🧮 Zeller’s Congruence Explained": "🧮 蔡勒一致性解释",
  "<b>Zeller’s Congruence</b> is a brilliant mathematical formula used to determine the day of the week for any date. The version used here is optimized for the Gregorian calendar.": "<b>蔡勒一致性</b>是一个出色的数学公式，用于确定任何日期的星期。这里使用的版本是为公历优化的。",
  "Or": "或",
  " = The day of the week (0 = Saturday, 1 = Sunday, ..., 6 = Friday)": " = 星期几 (0 = 星期六, 1 = 星期日, ..., 6 = 星期五)",
  " = The day of the month": " = 月份中的天数",
  " = The month (3 = March, ..., 12 = December). For Jan &amp; Feb, m is 13 &amp; 14 of the <i>previous</i> year.": " = 月份 (3 = 三月, ..., 12 = 十二月)。对于一月和二月，m是<i>前一年</i>的13和14。",
  " = The year of the century (<code>year % 100</code>)": " = 世纪中的年份 (<code>year % 100</code>)",
  " = The zero-based century (<code>Math.floor(year / 100)</code>)": " = 从零开始的世纪 (<code>Math.floor(year / 100)</code>)",
  "Historical Adjustment Note:": "历史调整说明：",
  "The Gregorian calendar was adopted in October 1582, which involved skipping 10 days (from October 5th to 14th) to realign the calendar with the seasons. This app correctly identifies these non-existent dates.": "公历于1582年10月采用，其中跳过了10天（从10月5日到14日），以使日历与季节重新对齐。此应用程序正确识别这些不存在的日期。",
  "🤔 Frequently Asked Questions (FAQ)": "🤔 常见问题解答 (FAQ)",
  "What is Zeller’s Congruence?": "什么是蔡勒一致性？",
  "Zeller's Congruence is a mathematical algorithm developed by Christian Zeller to calculate the day of the week for any given date in the Gregorian or Julian calendars.": "蔡勒一致性是克里斯蒂安·蔡勒开发的数学算法，用于计算公历或儒略历中任何给定日期的星期。",
  "Why are January and February treated as months 13 and 14 of the previous year?": "为什么一月和二月被视为前一年的第13和14个月？",
  "This adjustment simplifies the leap year calculation. By treating January and February as the end of the previous year, the leap day (February 29th) is always the last day of the calculation year, which makes the formula consistent.": "这种调整简化了闰年计算。通过将一月和二月视为前一年的结束，闰日（2月29日）始终是计算年的最后一天，这使得公式保持一致。",
  "Is this calculator accurate?": "这个计算器准确吗？",
  "Yes, this calculator is highly accurate for any date since the adoption of the Gregorian calendar (October 15, 1582). It correctly handles the 10-day skip implemented during the calendar reform.": "是的，自公历采用（1582年10月15日）以来，此计算器对于任何日期都非常准确。它正确处理了日历改革期间实施的10天跳跃。",
  "Day Finder": "日期查找器",
  "Developed by Mamedul Islam": "由 Mamedul Islam 开发",
  "⚠️ Please select a valid date.": "⚠️ 请选择一个有效日期。",
  "⚠️ These dates (Oct 5-14, 1582) do not exist due to the Gregorian calendar reform.": "⚠️ 这些日期（1582年10月5日至14日）因公历改革而​​不存在。",
  "⚠️ This calculator is accurate for dates on or after October 15, 1582.": "⚠️ 此计算器适用于1582年10月15日或之后的日期。",
  "%1$s <b>%2$s</b> is a <span style=\"color:var(--primary)\">%3$s</span>": "%1$s <b>%2$s</b> 是 <span style=\"color:var(--primary)\">%3$s</span>",
  "%1$s <b>%2$s</b> was a <span style=\"color:var(--primary)\">%3$s</span>": "%1$s <b>%2$s</b> 是 <span style=\"color:var(--primary)\">%3$s</span>",
  "%1$s <b>%2$s</b> will be a <span style=\"color:var(--primary)\">%3$s</span>": "%1$s <b>%2$s</b> 将是 <span style=\"color:var(--primary)\">%3$s</span>",
  "Saturday": "星期六",
  "Sunday": "星期日",
  "Monday": "星期一",
  "Tuesday": "星期二",
  "Wednesday": "星期三",
  "Thursday": "星期四",
  "Friday": "星期五",
  "0": "۰",
  "1": "۱",
  "2": "۲",
  "3": "۳",
  "4": "۴",
  "5": "۵",
  "6": "۶",
  "7": "۷",
  "8": "۸",
  "9": "۹",
  "English": "英语",
  "Mandarin Chinese": "普通话",
  "Hindi": "印地语",
  "Spanish": "西班牙语",
  "French": "法语",
  "Arabic": "阿拉伯语",
  "Bengali (Bangla)": "孟加拉语",
  "Portuguese": "葡萄牙语",
  "Russian": "俄语",
  "Urdu": "乌尔都语",
  "Select Language": "选择语言"
}
